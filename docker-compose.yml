version: '3'

networks:
  microservices-network:
    driver: bridge
  auth-network:
    driver: bridge
  db-network:
    driver: bridge
  client-network:
    driver: bridge
  logs:
    driver: bridge
  grafana-network:
    driver: bridge

services:

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - client-network
  #   depends_on:
  #     - nginx


  # nginx:
  #   build:
  #     context: ./backend/microservices/host-nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - auth-network
  #     - client-network
  #   depends_on:
  #     - authorization-interceptor-microservice

  # authorization-interceptor-microservice:
  #   build:
  #     context: ./backend/microservices/authorization/authorization-interceptor-microservice
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - authorization-microservice
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - microservices-network
  #     - auth-network

  # authorization-microservice:
  #   build:
  #     context: ./backend/microservices/authorization/authorization-microservice
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - tokens-microservice
  #     - master-server
  #     - slave-server
  #   networks:
  #     - microservices-network
  #     - db-network
      

  # postgres:
  #   build:
  #     context: ./backend/microservices/DB/postgres
  #     dockerfile: Dockerfile
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - db-network

  # master-server:
  #   build:
  #     context: ./backend/microservices/DB/master-server
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - postgres
  #   networks:
  #     - db-network

  # slave-server:
  #   build:
  #     context: ./backend/microservices/DB/slave-server
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - postgres
  #   networks:
  #     - db-network

  # tokens-microservice:
  #   build:
  #     context: ./backend/microservices/authorization/tokens-microservice
  #     dockerfile: Dockerfile
  #   networks:
  #     - microservices-network
  #     - logs
  #   depends_on:
  #     - elasticsearch

  elasticsearch:
    build:
      context: ./backend/microservices/monitoring/logs/elasticsearch
      dockerfile: Dockerfile
    networks:
      - logs


  kibana:
    build:
      context: ./backend/microservices/monitoring/logs/kibana
      dockerfile: Dockerfile
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - logs


  # prometheus:
  #   build:
  #     context: ./backend/microservices/monitoring/metrics/prometheus
  #     dockerfile: Dockerfile
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - grafana-network


  # grafana:
  #   build:
  #     context: ./backend/microservices/monitoring/metrics/grafana
  #     dockerfile: Dockerfile
  #   ports:
  #     - 9091:3000
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - grafana-network


volumes:
  esdata:
  postgres-data:


